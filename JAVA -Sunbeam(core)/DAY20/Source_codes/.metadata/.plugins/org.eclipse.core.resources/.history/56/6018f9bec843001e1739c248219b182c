import java.util.ArrayList;
import java.util.Arrays;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;


public class Day20_1 {

	public static void main(String[] args)
	{
		ArrayList<Integer> list = new ArrayList<>(Arrays.asList(23,1,20,12,45,122,20,10,67,78));
		System.out.println("List Before Sorting = "+list);
		System.out.println("List After Sorting ");
		list.stream().sorted().forEach(i -> System.out.print(i+"\t"));
	}
}



// creating a IntStream and then using methods of interface IntStream
// min(), max() ,count() 
/*
public class Day20_1 {

	public static void main(String[] args)
	{
		System.out.println(IntStream.rangeClosed(1, 15).max());
		System.out.println(IntStream.rangeClosed(1, 15).min());
		System.out.println(IntStream.rangeClosed(1, 15).count());
		}
}

*/


/*
public class Day20_1 {

	public static void main(String[] args)
	{
		IntStream.rangeClosed(1, 50)
		.filter(i-> i%2!=0)
		.forEach(i-> System.out.print(i+"\t"));
		
	}
}

*/
/*
// creating sequential and parallel Stream
public class Day20_1 {

	public static void main(String[] args)
	{
		ArrayList<Integer> list = new ArrayList<>(Arrays.asList(23,1,20,12,45,122,20,10,67,78));
		System.out.println("Sequential Stream");
		//To generate sequential stream (stream)

		list.stream().forEach(i->System.out.print(i+"\t"));
		
		System.out.println("\n Parallel Stream");
		// to generate parallel stream
		list.parallelStream().forEach(i->System.out.print(i+"\t"));
	
	}
}

*/




/*
public class Day20_1 {

	public static void main(String[] args)
	{
		int[] data = {23,1,20,12,45,122,20,10,67,78};
		System.out.println("Printing Array Contents");
		
		Arrays.stream(data).forEach(System.out::println);

	}

}


*/
