import java.lang.reflect.Constructor;

// create one class ReflectionDemo
// declare one field
// declare some constructor (parameterless)
// declare some methods (public-m1, public - m2 , private - m3 etc )

// reflect the class ReflectionDemo
// fetch the information about the class


class ReflectionDemo
{
	private String str;
	
	public ReflectionDemo()
	{
		System.out.println("Inside Parameterless constructor");
	}
	
	public ReflectionDemo(String str)
	{
		System.out.println("Inside Paramatrized constructor");
		this.str=str;
	}
	
	public void m1()
	{
		System.out.println("Inside Method1 Str = "+str);
	}
	
	public void m2(int num1)
	{
		System.out.println("Inside Method2 = "+num1);
		
	}
	
	private void m3()
	{
		System.out.println("Inside Method3");
	}
}

//this program is fetching the constructors in the class ReflectionDemo
public class Day17_6 {

	public static void main(String[] args) throws NoSuchMethodException, SecurityException
	{
		ReflectionDemo robj = new ReflectionDemo();
		Class c = robj.getClass(); // reflected the class
		
		Constructor carr[]= c.getDeclaredConstructors();
		
		for(Constructor ctr : carr)
			System.out.println(ctr.getName());
		
		System.out.println();
		
		Constructor carr1[] = c.getConstructors();
		for(Constructor ctr : carr1)
			System.out.println(ctr.getName());
		
		System.out.println();
		Constructor cons = c.getConstructor();
		System.out.println("Cons = "+cons);
		
		System.out.println();
		Constructor cons1 = c.getConstructor(String.class);
		System.out.println("Cons1 = "+cons1);
		
		
	}

}
